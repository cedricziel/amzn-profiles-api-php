<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\AmznAdvertisingProfilesApi\Generated\Model;

class AccountInfo extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The identifier of the marketplace to which the account is associated.
     *
     * @var string
     */
    protected $marketplaceStringId;
    /**
     * Identifier for sellers and vendors. Note that this value is not unique and may be the same across marketplace.
     *
     * @var string
     */
    protected $id;
    /**
     * The `seller` and `vendor` account types are associated with Sponsored Ads APIs. The `agency` account type is associated with DSP and Data Provider APIs.
     *
     * @var string
     */
    protected $type;
    /**
     * Account name.
     *
     * @var string
     */
    protected $name;
    /**
     * The account subtype.
     *
     * @var string
     */
    protected $subType;
    /**
     * Only present for Vendors, this returns whether the Advertiser has set up a valid payment method or not.
     *
     * @var bool
     */
    protected $validPaymentMethod;

    /**
     * The identifier of the marketplace to which the account is associated.
     */
    public function getMarketplaceStringId(): string
    {
        return $this->marketplaceStringId;
    }

    /**
     * The identifier of the marketplace to which the account is associated.
     */
    public function setMarketplaceStringId(string $marketplaceStringId): self
    {
        $this->initialized['marketplaceStringId'] = true;
        $this->marketplaceStringId = $marketplaceStringId;

        return $this;
    }

    /**
     * Identifier for sellers and vendors. Note that this value is not unique and may be the same across marketplace.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Identifier for sellers and vendors. Note that this value is not unique and may be the same across marketplace.
     */
    public function setId(string $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    /**
     * The `seller` and `vendor` account types are associated with Sponsored Ads APIs. The `agency` account type is associated with DSP and Data Provider APIs.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * The `seller` and `vendor` account types are associated with Sponsored Ads APIs. The `agency` account type is associated with DSP and Data Provider APIs.
     */
    public function setType(string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }

    /**
     * Account name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Account name.
     */
    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * The account subtype.
     */
    public function getSubType(): string
    {
        return $this->subType;
    }

    /**
     * The account subtype.
     */
    public function setSubType(string $subType): self
    {
        $this->initialized['subType'] = true;
        $this->subType = $subType;

        return $this;
    }

    /**
     * Only present for Vendors, this returns whether the Advertiser has set up a valid payment method or not.
     */
    public function getValidPaymentMethod(): bool
    {
        return $this->validPaymentMethod;
    }

    /**
     * Only present for Vendors, this returns whether the Advertiser has set up a valid payment method or not.
     */
    public function setValidPaymentMethod(bool $validPaymentMethod): self
    {
        $this->initialized['validPaymentMethod'] = true;
        $this->validPaymentMethod = $validPaymentMethod;

        return $this;
    }
}
